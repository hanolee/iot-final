{"ast":null,"code":"import{Methods,request}from'@/libs/request';import{ROUTER}from'@/router';const{FESTIVAL_ADMIN}=ROUTER;export const patchFestival=async(patchFestivalForAdminRequestDto,id)=>{return request({url:\"\".concat(FESTIVAL_ADMIN,\"/\").concat(id),method:Methods.PATCH,data:patchFestivalForAdminRequestDto});};","map":{"version":3,"names":["Methods","request","ROUTER","FESTIVAL_ADMIN","patchFestival","patchFestivalForAdminRequestDto","id","url","concat","method","PATCH","data"],"sources":["/Users/hano/dev/snu/iot/iot-final/src/apis/festival/patchFestival.ts"],"sourcesContent":["import { Methods, request } from '@/libs/request'\nimport { ROUTER } from '@/router'\n\nexport type PatchFestivalForAdminRequestDto = {\n  location: string;\n  locationLocal: string;\n  specificLocation: string;\n  nation: string;\n  city: string;\n  cityLocal: string;\n  subCity: string;\n  subCityLocal: string;\n  longitude: string;\n  latitude: string;\n  year: number;\n  title: string;\n  description: string;\n  tag: string;\n  summary: string;\n  participationFee: number;\n  visible: boolean;\n  reservationAvaliable: boolean;\n  reservationType: string;\n  openedAt: Date;\n  expiredAt: Date;\n}\n\nconst { FESTIVAL_ADMIN } = ROUTER\n\nexport const patchFestival = async(patchFestivalForAdminRequestDto: PatchFestivalForAdminRequestDto, id: number) => {\n  return request<void>({\n    url: `${FESTIVAL_ADMIN}/${id}`,\n    method: Methods.PATCH,\n    data: patchFestivalForAdminRequestDto\n  })\n}\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,OAAO,KAAQ,gBAAgB,CACjD,OAASC,MAAM,KAAQ,UAAU,CA0BjC,KAAM,CAAEC,cAAe,CAAC,CAAGD,MAAM,CAEjC,MAAO,MAAM,CAAAE,aAAa,CAAG,KAAAA,CAAMC,+BAAgE,CAAEC,EAAU,GAAK,CAClH,MAAO,CAAAL,OAAO,CAAO,CACnBM,GAAG,IAAAC,MAAA,CAAKL,cAAc,MAAAK,MAAA,CAAIF,EAAE,CAAE,CAC9BG,MAAM,CAAET,OAAO,CAACU,KAAK,CACrBC,IAAI,CAAEN,+BACR,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}