{"ast":null,"code":"import{Methods,request}from'@/libs/request';import{ROUTER}from'@/router';import{getAccessToken}from'@/utils/jwt';const{TEAHOUSE}=ROUTER;export const postApproveTeahouse=async _ref=>{let{approvementType,note,id}=_ref;return request({url:\"\".concat(TEAHOUSE,\"/\").concat(id,\"/approve\"),method:Methods.POST,data:{approvementType,note},headers:{Authorization:\"Bearer \".concat(getAccessToken())}});};","map":{"version":3,"names":["Methods","request","ROUTER","getAccessToken","TEAHOUSE","postApproveTeahouse","_ref","approvementType","note","id","url","concat","method","POST","data","headers","Authorization"],"sources":["/Users/hano/dev/snu/iot/iot-final/src/apis/teahouse/postApproveTeahouse.ts"],"sourcesContent":["import { Methods, request } from '@/libs/request'\nimport { ROUTER } from '@/router'\nimport { ApprovementType } from '@/types/ApprovementType'\nimport { getAccessToken } from '@/utils/jwt'\n\nexport type postApproveTeahouseType = {\n  approvementType: ApprovementType;\n  note: string;\n  id: number;\n}\n\nconst { TEAHOUSE } = ROUTER\n\nexport const postApproveTeahouse = async({ approvementType, note, id }: postApproveTeahouseType) => {\n  return request<{ id: number }>({\n    url: `${TEAHOUSE}/${id}/approve`,\n    method: Methods.POST,\n    data: { approvementType, note },\n    headers: { Authorization: `Bearer ${getAccessToken()}` }\n  })\n}\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,OAAO,KAAQ,gBAAgB,CACjD,OAASC,MAAM,KAAQ,UAAU,CAEjC,OAASC,cAAc,KAAQ,aAAa,CAQ5C,KAAM,CAAEC,QAAS,CAAC,CAAGF,MAAM,CAE3B,MAAO,MAAM,CAAAG,mBAAmB,CAAG,MAAAC,IAAA,EAAiE,IAA3D,CAAEC,eAAe,CAAEC,IAAI,CAAEC,EAA4B,CAAC,CAAAH,IAAA,CAC7F,MAAO,CAAAL,OAAO,CAAiB,CAC7BS,GAAG,IAAAC,MAAA,CAAKP,QAAQ,MAAAO,MAAA,CAAIF,EAAE,YAAU,CAChCG,MAAM,CAAEZ,OAAO,CAACa,IAAI,CACpBC,IAAI,CAAE,CAAEP,eAAe,CAAEC,IAAK,CAAC,CAC/BO,OAAO,CAAE,CAAEC,aAAa,WAAAL,MAAA,CAAYR,cAAc,CAAC,CAAC,CAAG,CACzD,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}