{"ast":null,"code":"import{useMutation,useQueryClient}from'react-query';import{patchUpdateShop}from'@/apis/shopping/patchUpdateShop';export default function useUpdateShop(){const queryClient=useQueryClient();return useMutation(async _ref=>{let{shopId,data}=_ref;await patchUpdateShop(shopId,data);},{onSuccess:()=>{queryClient.invalidateQueries('shopping-admin/shop');}});}","map":{"version":3,"names":["useMutation","useQueryClient","patchUpdateShop","useUpdateShop","queryClient","_ref","shopId","data","onSuccess","invalidateQueries"],"sources":["/Users/hano/dev/snu/iot/iot-final/src/hooks/shopping/useUpdateShop.ts"],"sourcesContent":["import { useMutation, useQueryClient } from 'react-query'\n\nimport { patchUpdateShop, UpdateShopType } from '@/apis/shopping/patchUpdateShop'\n\ntype MutationParams = {\n  shopId: number;\n  data: UpdateShopType;\n}\n\nexport default function useUpdateShop() {\n  const queryClient = useQueryClient()\n\n  return useMutation<void, unknown, MutationParams>(\n    async ({ shopId, data }) => {\n      await patchUpdateShop(shopId, data)\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('shopping-admin/shop')\n      }\n    }\n  )\n}\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,cAAc,KAAQ,aAAa,CAEzD,OAASC,eAAe,KAAwB,iCAAiC,CAOjF,cAAe,SAAS,CAAAC,aAAaA,CAAA,CAAG,CACtC,KAAM,CAAAC,WAAW,CAAGH,cAAc,CAAC,CAAC,CAEpC,MAAO,CAAAD,WAAW,CAChB,MAAAK,IAAA,EAA4B,IAArB,CAAEC,MAAM,CAAEC,IAAK,CAAC,CAAAF,IAAA,CACrB,KAAM,CAAAH,eAAe,CAACI,MAAM,CAAEC,IAAI,CAAC,CACrC,CAAC,CACD,CACEC,SAAS,CAAEA,CAAA,GAAM,CACfJ,WAAW,CAACK,iBAAiB,CAAC,qBAAqB,CAAC,CACtD,CACF,CACF,CAAC,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}