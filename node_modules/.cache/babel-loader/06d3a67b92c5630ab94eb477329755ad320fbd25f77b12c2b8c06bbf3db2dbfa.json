{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQueryClient } from 'react-query';\nimport { patchUpdateShop } from '@/apis/shopping/patchUpdateShop';\nexport default function useUpdateShop() {\n  _s();\n  const queryClient = useQueryClient();\n  return useMutation(async ({\n    shopId,\n    data\n  }) => {\n    await patchUpdateShop(shopId, data);\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('shopping-admin/shop');\n    }\n  });\n}\n_s(useUpdateShop, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","patchUpdateShop","useUpdateShop","_s","queryClient","shopId","data","onSuccess","invalidateQueries"],"sources":["/Users/hano/dev/snu/iot/final-project/src/hooks/shopping/useUpdateShop.ts"],"sourcesContent":["import { useMutation, useQueryClient } from 'react-query'\n\nimport { patchUpdateShop, UpdateShopType } from '@/apis/shopping/patchUpdateShop'\n\ntype MutationParams = {\n  shopId: number;\n  data: UpdateShopType;\n}\n\nexport default function useUpdateShop() {\n  const queryClient = useQueryClient()\n\n  return useMutation<void, unknown, MutationParams>(\n    async ({ shopId, data }) => {\n      await patchUpdateShop(shopId, data)\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('shopping-admin/shop')\n      }\n    }\n  )\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,aAAa;AAEzD,SAASC,eAAe,QAAwB,iCAAiC;AAOjF,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,WAAW,GAAGJ,cAAc,CAAC,CAAC;EAEpC,OAAOD,WAAW,CAChB,OAAO;IAAEM,MAAM;IAAEC;EAAK,CAAC,KAAK;IAC1B,MAAML,eAAe,CAACI,MAAM,EAAEC,IAAI,CAAC;EACrC,CAAC,EACD;IACEC,SAAS,EAAEA,CAAA,KAAM;MACfH,WAAW,CAACI,iBAAiB,CAAC,qBAAqB,CAAC;IACtD;EACF,CACF,CAAC;AACH;AAACL,EAAA,CAbuBD,aAAa;EAAA,QACfF,cAAc,EAE3BD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}