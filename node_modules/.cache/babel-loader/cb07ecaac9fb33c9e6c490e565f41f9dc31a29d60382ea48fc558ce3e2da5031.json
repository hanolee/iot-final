{"ast":null,"code":"import{useQuery}from'react-query';import{getFilteredTeahouses}from'@/apis/teahouse/getFilteredTeahouses';const getQueryKey=teahouseId=>[\"teahouse/filtered-teahouse/teahouse/\".concat(teahouseId)];export default function useFilteredTeahouses(teahouseId){return useQuery(getQueryKey(teahouseId),async()=>{const filteredTeahouses=await getFilteredTeahouses(teahouseId);return filteredTeahouses;});}","map":{"version":3,"names":["useQuery","getFilteredTeahouses","getQueryKey","teahouseId","concat","useFilteredTeahouses","filteredTeahouses"],"sources":["/Users/hano/dev/snu/iot/iot-final/src/hooks/teahouse/useFilteredTeahouses.ts"],"sourcesContent":["import { useQuery } from 'react-query'\n\nimport { getFilteredTeahouses } from '@/apis/teahouse/getFilteredTeahouses'\n\nconst getQueryKey = (teahouseId: number) => [`teahouse/filtered-teahouse/teahouse/${teahouseId}`]\n\nexport default function useFilteredTeahouses(teahouseId: number){\n  return useQuery(\n    getQueryKey(teahouseId),\n    async () => {\n      const filteredTeahouses = await getFilteredTeahouses(teahouseId)\n      return filteredTeahouses\n    }\n  )\n}\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,aAAa,CAEtC,OAASC,oBAAoB,KAAQ,sCAAsC,CAE3E,KAAM,CAAAC,WAAW,CAAIC,UAAkB,EAAK,wCAAAC,MAAA,CAAwCD,UAAU,EAAG,CAEjG,cAAe,SAAS,CAAAE,oBAAoBA,CAACF,UAAkB,CAAC,CAC9D,MAAO,CAAAH,QAAQ,CACbE,WAAW,CAACC,UAAU,CAAC,CACvB,SAAY,CACV,KAAM,CAAAG,iBAAiB,CAAG,KAAM,CAAAL,oBAAoB,CAACE,UAAU,CAAC,CAChE,MAAO,CAAAG,iBAAiB,CAC1B,CACF,CAAC,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}