{"ast":null,"code":"import { Methods, request } from '@/libs/request';\nimport { ROUTER } from '@/router';\nconst {\n  FESTIVAL_ADMIN\n} = ROUTER;\nexport const postCreateParticipator = async ({\n  festivalId,\n  name,\n  boothNumber,\n  description,\n  handledTea,\n  country,\n  tag,\n  latitude,\n  longitude\n}) => request({\n  url: `${FESTIVAL_ADMIN}/${festivalId}/participator`,\n  method: Methods.POST,\n  data: {\n    name,\n    boothNumber,\n    description,\n    handledTea,\n    country,\n    tag,\n    latitude,\n    longitude\n  }\n});","map":{"version":3,"names":["Methods","request","ROUTER","FESTIVAL_ADMIN","postCreateParticipator","festivalId","name","boothNumber","description","handledTea","country","tag","latitude","longitude","url","method","POST","data"],"sources":["/Users/hano/dev/snu/iot/final-project/src/apis/festival/postCreateParticipator.ts"],"sourcesContent":["import { Methods, request } from '@/libs/request'\nimport { ROUTER } from '@/router'\n\nconst { FESTIVAL_ADMIN } = ROUTER\n\nexport type postParticipatorRequestType = {\n  festivalId: number;\n  name: string;\n  boothNumber: number;\n  description: string;\n  handledTea: string;\n  country: 'KR' | 'CN' | 'JP' | 'LK' | 'TW' | 'US';\n  tag: string;\n  latitude: string;\n  longitude: string;\n}\n\nexport type postParticipatorResponseType = {\n  participatorId: number;\n  boothNumber: number;\n  name: string;\n  tag: string;\n}\n\nexport const postCreateParticipator = async({ festivalId, name, boothNumber, description, handledTea, country, tag, latitude, longitude }: postParticipatorRequestType) => request<postParticipatorResponseType>({\n  url: `${FESTIVAL_ADMIN}/${festivalId}/participator`,\n  method: Methods.POST,\n  data: { name, boothNumber, description, handledTea, country, tag, latitude, longitude }\n})\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,gBAAgB;AACjD,SAASC,MAAM,QAAQ,UAAU;AAEjC,MAAM;EAAEC;AAAe,CAAC,GAAGD,MAAM;AAqBjC,OAAO,MAAME,sBAAsB,GAAG,MAAAA,CAAM;EAAEC,UAAU;EAAEC,IAAI;EAAEC,WAAW;EAAEC,WAAW;EAAEC,UAAU;EAAEC,OAAO;EAAEC,GAAG;EAAEC,QAAQ;EAAEC;AAAuC,CAAC,KAAKZ,OAAO,CAA+B;EAC/Ma,GAAG,EAAG,GAAEX,cAAe,IAAGE,UAAW,eAAc;EACnDU,MAAM,EAAEf,OAAO,CAACgB,IAAI;EACpBC,IAAI,EAAE;IAAEX,IAAI;IAAEC,WAAW;IAAEC,WAAW;IAAEC,UAAU;IAAEC,OAAO;IAAEC,GAAG;IAAEC,QAAQ;IAAEC;EAAU;AACxF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}