{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport { getFilteredPosts } from '@/apis/post/getFilteredPosts';\nconst getQueryKey = postId => [`post/filtered-teahouse/post/${postId}`];\nexport default function useFilteredPosts(postId) {\n  _s();\n  return useQuery(getQueryKey(postId), async () => {\n    const filteredPosts = await getFilteredPosts(postId);\n    return filteredPosts;\n  });\n}\n_s(useFilteredPosts, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","getFilteredPosts","getQueryKey","postId","useFilteredPosts","_s","filteredPosts"],"sources":["/Users/hano/dev/snu/iot/iot-final/src/hooks/post/useFilteredPosts.ts"],"sourcesContent":["import { useQuery } from 'react-query'\n\nimport { getFilteredPosts } from '@/apis/post/getFilteredPosts'\n\nconst getQueryKey = (postId: number) => [`post/filtered-teahouse/post/${postId}`]\n\nexport default function useFilteredPosts(postId: number){\n  return useQuery(\n    getQueryKey(postId),\n    async () => {\n      const filteredPosts = await getFilteredPosts(postId)\n      return filteredPosts\n    }\n  )\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,aAAa;AAEtC,SAASC,gBAAgB,QAAQ,8BAA8B;AAE/D,MAAMC,WAAW,GAAIC,MAAc,IAAK,CAAE,+BAA8BA,MAAO,EAAC,CAAC;AAEjF,eAAe,SAASC,gBAAgBA,CAACD,MAAc,EAAC;EAAAE,EAAA;EACtD,OAAOL,QAAQ,CACbE,WAAW,CAACC,MAAM,CAAC,EACnB,YAAY;IACV,MAAMG,aAAa,GAAG,MAAML,gBAAgB,CAACE,MAAM,CAAC;IACpD,OAAOG,aAAa;EACtB,CACF,CAAC;AACH;AAACD,EAAA,CARuBD,gBAAgB;EAAA,QAC/BJ,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}