{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/hano/dev/daru/daru-admin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import styled from'@emotion/styled';import{useCallback}from'react';import usePostApproveTeahouse from'@/hooks/teahouse/usePostApproveTeahouse';import useTeahouses from'@/hooks/teahouse/useTeahouses';import timeSince from'@/libs/timeSince';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const TeahouseAdminPage=()=>{const{data:teahouses}=useTeahouses();const{mutate:approveTeahouse}=usePostApproveTeahouse();// eslint-disable-next-line react-hooks/exhaustive-deps\nconst approveTeahouseMemo=useCallback(approveTeahouse,[approveTeahouse]);const sortedTeahouses=teahouses===null||teahouses===void 0?void 0:teahouses.sort((a,b)=>{return new Date(b.createdAt).getTime()-new Date(a.createdAt).getTime();});function approveHandler(id){approveTeahouseMemo({approvementType:'APPROVED',note:'승인 완료',id});}function rejectHandler(id){approveTeahouseMemo({approvementType:'REJECTED',note:'존재하지 않는 티룸',id});}return/*#__PURE__*/_jsxs(PageWrapper,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uCC3B\\uC9D1, \\uACF5\\uAC04 \\uC2B9\\uC778 \\uAD00\\uB828\"}),sortedTeahouses===null||sortedTeahouses===void 0?void 0:sortedTeahouses.map((teahouse,index)=>{return/*#__PURE__*/_jsxs(TeahouseWrapper,{children:[/*#__PURE__*/_jsx(\"span\",{children:teahouse.id}),/*#__PURE__*/_jsx(TeahouseApprovementBadge,{approvementType:teahouse.approvementType}),/*#__PURE__*/_jsx(\"span\",{children:timeSince(teahouse.createdAt)}),/*#__PURE__*/_jsx(\"span\",{children:teahouse.nation}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"b\",{children:teahouse.name})}),/*#__PURE__*/_jsx(\"span\",{children:teahouse.location}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>approveHandler(teahouse.id),children:\"\\uC2B9\\uC778\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>rejectHandler(teahouse.id),children:\"\\uBC18\\uB824\\uD558\\uAE30\"})]},index);})]});};export default TeahouseAdminPage;const PageWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 60px 20px 20px 20px;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n\"])));const TeahouseWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  gap: 5px;\\n\"])));const TeahouseApprovementBadgeWrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 3px 10px;\\n  border-radius: 5px;\\n  font-size: 12px;\\n  background-color: \",\"; \\n\"])),_ref=>{let{approvementType}=_ref;if(approvementType=='APPROVED'){return'green';}else if(approvementType=='PENDING'){return'gray';}else{return'orange';}});const TeahouseApprovementBadge=_ref2=>{let{approvementType}=_ref2;return/*#__PURE__*/_jsx(TeahouseApprovementBadgeWrapper,{approvementType:approvementType,children:badgeText(approvementType)});};const badgeText=approvementType=>{if(approvementType=='APPROVED'){return'승인 완료';}else if(approvementType=='PENDING'){return'대기 중';}else{return'반려됨';}};","map":{"version":3,"names":["styled","useCallback","usePostApproveTeahouse","useTeahouses","timeSince","jsx","_jsx","jsxs","_jsxs","TeahouseAdminPage","data","teahouses","mutate","approveTeahouse","approveTeahouseMemo","sortedTeahouses","sort","a","b","Date","createdAt","getTime","approveHandler","id","approvementType","note","rejectHandler","PageWrapper","children","map","teahouse","index","TeahouseWrapper","TeahouseApprovementBadge","nation","name","location","onClick","div","_templateObject","_taggedTemplateLiteral","_templateObject2","TeahouseApprovementBadgeWrapper","_templateObject3","_ref","_ref2","badgeText"],"sources":["/Users/hano/dev/daru/daru-admin/src/pages/teahouse/TeahouseAdminPage.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { useCallback } from 'react'\n\nimport usePostApproveTeahouse from '@/hooks/teahouse/usePostApproveTeahouse'\nimport useTeahouses from '@/hooks/teahouse/useTeahouses'\nimport timeSince from '@/libs/timeSince'\nimport { ApprovementType } from '@/types/ApprovementType'\n\nconst TeahouseAdminPage = () => {\n  const { data: teahouses } = useTeahouses()\n  const { mutate: approveTeahouse } = usePostApproveTeahouse()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const approveTeahouseMemo = useCallback(approveTeahouse, [approveTeahouse])\n  const sortedTeahouses = teahouses?.sort((a, b) => {\n    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n  })\n  function approveHandler(id: number) {\n    approveTeahouseMemo({ approvementType: 'APPROVED', note: '승인 완료', id })\n  }\n  function rejectHandler(id: number) {\n    approveTeahouseMemo({ approvementType: 'REJECTED', note: '존재하지 않는 티룸', id })\n  }\n  return (\n    <PageWrapper>\n      <h1>찻집, 공간 승인 관련</h1>\n      {sortedTeahouses?.map((teahouse, index) => {\n        return (\n          <TeahouseWrapper key={index}>\n            <span>{teahouse.id}</span>\n            <TeahouseApprovementBadge approvementType={teahouse.approvementType} />\n            <span>{timeSince(teahouse.createdAt)}</span>\n            <span>{teahouse.nation}</span>\n            <span><b>{teahouse.name}</b></span>\n            <span>{teahouse.location}</span>\n            <button onClick={() => approveHandler(teahouse.id)}>승인하기</button>\n            <button onClick={() => rejectHandler(teahouse.id)}>반려하기</button>\n          </TeahouseWrapper>\n        )\n      })}\n    </PageWrapper>\n  )\n}\nexport default TeahouseAdminPage\n\nconst PageWrapper = styled.div`\n  padding: 60px 20px 20px 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`\nconst TeahouseWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 5px;\n`\n\nconst TeahouseApprovementBadgeWrapper = styled.div<{ approvementType: ApprovementType }>`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 3px 10px;\n  border-radius: 5px;\n  font-size: 12px;\n  background-color: ${({ approvementType }) => {\n    if (approvementType == 'APPROVED') {\n      return 'green'\n    } else if (approvementType == 'PENDING') {\n      return 'gray'\n    } else {\n      return 'orange'\n    }\n  }}; \n`\ntype TeahouseApprovementBadgeType = { approvementType: ApprovementType }\nconst TeahouseApprovementBadge = ({ approvementType }: TeahouseApprovementBadgeType) => {\n  return (\n    <TeahouseApprovementBadgeWrapper approvementType={approvementType}>\n      {badgeText(approvementType)}\n    </TeahouseApprovementBadgeWrapper>\n  )\n}\nconst badgeText = (approvementType: ApprovementType) => {\n  if (approvementType == 'APPROVED') {\n    return '승인 완료'\n  } else if (approvementType == 'PENDING') {\n    return '대기 중'\n  } else {\n    return '반려됨'\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}